{"mappings":"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","sources":["node_modules/stats.js/src/Stats.js","node_modules/three/examples/jsm/loaders/PLYLoader.js","example/pointCloudIntersection.js"],"sourcesContent":["/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar Stats = function () {\n\n\tvar mode = 0;\n\n\tvar container = document.createElement( 'div' );\n\tcontainer.style.cssText = 'position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000';\n\tcontainer.addEventListener( 'click', function ( event ) {\n\n\t\tevent.preventDefault();\n\t\tshowPanel( ++ mode % container.children.length );\n\n\t}, false );\n\n\t//\n\n\tfunction addPanel( panel ) {\n\n\t\tcontainer.appendChild( panel.dom );\n\t\treturn panel;\n\n\t}\n\n\tfunction showPanel( id ) {\n\n\t\tfor ( var i = 0; i < container.children.length; i ++ ) {\n\n\t\t\tcontainer.children[ i ].style.display = i === id ? 'block' : 'none';\n\n\t\t}\n\n\t\tmode = id;\n\n\t}\n\n\t//\n\n\tvar beginTime = ( performance || Date ).now(), prevTime = beginTime, frames = 0;\n\n\tvar fpsPanel = addPanel( new Stats.Panel( 'FPS', '#0ff', '#002' ) );\n\tvar msPanel = addPanel( new Stats.Panel( 'MS', '#0f0', '#020' ) );\n\n\tif ( self.performance && self.performance.memory ) {\n\n\t\tvar memPanel = addPanel( new Stats.Panel( 'MB', '#f08', '#201' ) );\n\n\t}\n\n\tshowPanel( 0 );\n\n\treturn {\n\n\t\tREVISION: 16,\n\n\t\tdom: container,\n\n\t\taddPanel: addPanel,\n\t\tshowPanel: showPanel,\n\n\t\tbegin: function () {\n\n\t\t\tbeginTime = ( performance || Date ).now();\n\n\t\t},\n\n\t\tend: function () {\n\n\t\t\tframes ++;\n\n\t\t\tvar time = ( performance || Date ).now();\n\n\t\t\tmsPanel.update( time - beginTime, 200 );\n\n\t\t\tif ( time > prevTime + 1000 ) {\n\n\t\t\t\tfpsPanel.update( ( frames * 1000 ) / ( time - prevTime ), 100 );\n\n\t\t\t\tprevTime = time;\n\t\t\t\tframes = 0;\n\n\t\t\t\tif ( memPanel ) {\n\n\t\t\t\t\tvar memory = performance.memory;\n\t\t\t\t\tmemPanel.update( memory.usedJSHeapSize / 1048576, memory.jsHeapSizeLimit / 1048576 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn time;\n\n\t\t},\n\n\t\tupdate: function () {\n\n\t\t\tbeginTime = this.end();\n\n\t\t},\n\n\t\t// Backwards Compatibility\n\n\t\tdomElement: container,\n\t\tsetMode: showPanel\n\n\t};\n\n};\n\nStats.Panel = function ( name, fg, bg ) {\n\n\tvar min = Infinity, max = 0, round = Math.round;\n\tvar PR = round( window.devicePixelRatio || 1 );\n\n\tvar WIDTH = 80 * PR, HEIGHT = 48 * PR,\n\t\t\tTEXT_X = 3 * PR, TEXT_Y = 2 * PR,\n\t\t\tGRAPH_X = 3 * PR, GRAPH_Y = 15 * PR,\n\t\t\tGRAPH_WIDTH = 74 * PR, GRAPH_HEIGHT = 30 * PR;\n\n\tvar canvas = document.createElement( 'canvas' );\n\tcanvas.width = WIDTH;\n\tcanvas.height = HEIGHT;\n\tcanvas.style.cssText = 'width:80px;height:48px';\n\n\tvar context = canvas.getContext( '2d' );\n\tcontext.font = 'bold ' + ( 9 * PR ) + 'px Helvetica,Arial,sans-serif';\n\tcontext.textBaseline = 'top';\n\n\tcontext.fillStyle = bg;\n\tcontext.fillRect( 0, 0, WIDTH, HEIGHT );\n\n\tcontext.fillStyle = fg;\n\tcontext.fillText( name, TEXT_X, TEXT_Y );\n\tcontext.fillRect( GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT );\n\n\tcontext.fillStyle = bg;\n\tcontext.globalAlpha = 0.9;\n\tcontext.fillRect( GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT );\n\n\treturn {\n\n\t\tdom: canvas,\n\n\t\tupdate: function ( value, maxValue ) {\n\n\t\t\tmin = Math.min( min, value );\n\t\t\tmax = Math.max( max, value );\n\n\t\t\tcontext.fillStyle = bg;\n\t\t\tcontext.globalAlpha = 1;\n\t\t\tcontext.fillRect( 0, 0, WIDTH, GRAPH_Y );\n\t\t\tcontext.fillStyle = fg;\n\t\t\tcontext.fillText( round( value ) + ' ' + name + ' (' + round( min ) + '-' + round( max ) + ')', TEXT_X, TEXT_Y );\n\n\t\t\tcontext.drawImage( canvas, GRAPH_X + PR, GRAPH_Y, GRAPH_WIDTH - PR, GRAPH_HEIGHT, GRAPH_X, GRAPH_Y, GRAPH_WIDTH - PR, GRAPH_HEIGHT );\n\n\t\t\tcontext.fillRect( GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, GRAPH_HEIGHT );\n\n\t\t\tcontext.fillStyle = bg;\n\t\t\tcontext.globalAlpha = 0.9;\n\t\t\tcontext.fillRect( GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, round( ( 1 - ( value / maxValue ) ) * GRAPH_HEIGHT ) );\n\n\t\t}\n\n\t};\n\n};\n\nexport { Stats as default };\n","import {\n\tBufferGeometry,\n\tFileLoader,\n\tFloat32BufferAttribute,\n\tLoader,\n\tColor\n} from 'three';\n\n/**\n * Description: A THREE loader for PLY ASCII files (known as the Polygon\n * File Format or the Stanford Triangle Format).\n *\n * Limitations: ASCII decoding assumes file is UTF-8.\n *\n * Usage:\n *\tconst loader = new PLYLoader();\n *\tloader.load('./models/ply/ascii/dolphins.ply', function (geometry) {\n *\n *\t\tscene.add( new THREE.Mesh( geometry ) );\n *\n *\t} );\n *\n * If the PLY file uses non standard property names, they can be mapped while\n * loading. For example, the following maps the properties\n * “diffuse_(red|green|blue)” in the file to standard color names.\n *\n * loader.setPropertyNameMapping( {\n *\tdiffuse_red: 'red',\n *\tdiffuse_green: 'green',\n *\tdiffuse_blue: 'blue'\n * } );\n *\n * Custom properties outside of the defaults for position, uv, normal\n * and color attributes can be added using the setCustomPropertyNameMapping method.\n * For example, the following maps the element properties “custom_property_a”\n * and “custom_property_b” to an attribute “customAttribute” with an item size of 2.\n * Attribute item sizes are set from the number of element properties in the property array.\n *\n * loader.setCustomPropertyNameMapping( {\n *\tcustomAttribute: ['custom_property_a', 'custom_property_b'],\n * } );\n *\n */\n\nconst _color = new Color();\n\nclass PLYLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.propertyNameMapping = {};\n\t\tthis.customPropertyMapping = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( text ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tsetPropertyNameMapping( mapping ) {\n\n\t\tthis.propertyNameMapping = mapping;\n\n\t}\n\n\tsetCustomPropertyNameMapping( mapping ) {\n\n\t\tthis.customPropertyMapping = mapping;\n\n\t}\n\n\tparse( data ) {\n\n\t\tfunction parseHeader( data ) {\n\n\t\t\tconst patternHeader = /^ply([\\s\\S]*)end_header(\\r\\n|\\r|\\n)/;\n\t\t\tlet headerText = '';\n\t\t\tlet headerLength = 0;\n\t\t\tconst result = patternHeader.exec( data );\n\n\t\t\tif ( result !== null ) {\n\n\t\t\t\theaderText = result[ 1 ];\n\t\t\t\theaderLength = new Blob( [ result[ 0 ] ] ).size;\n\n\t\t\t}\n\n\t\t\tconst header = {\n\t\t\t\tcomments: [],\n\t\t\t\telements: [],\n\t\t\t\theaderLength: headerLength,\n\t\t\t\tobjInfo: ''\n\t\t\t};\n\n\t\t\tconst lines = headerText.split( /\\r\\n|\\r|\\n/ );\n\t\t\tlet currentElement;\n\n\t\t\tfunction make_ply_element_property( propertValues, propertyNameMapping ) {\n\n\t\t\t\tconst property = { type: propertValues[ 0 ] };\n\n\t\t\t\tif ( property.type === 'list' ) {\n\n\t\t\t\t\tproperty.name = propertValues[ 3 ];\n\t\t\t\t\tproperty.countType = propertValues[ 1 ];\n\t\t\t\t\tproperty.itemType = propertValues[ 2 ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tproperty.name = propertValues[ 1 ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( property.name in propertyNameMapping ) {\n\n\t\t\t\t\tproperty.name = propertyNameMapping[ property.name ];\n\n\t\t\t\t}\n\n\t\t\t\treturn property;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0; i < lines.length; i ++ ) {\n\n\t\t\t\tlet line = lines[ i ];\n\t\t\t\tline = line.trim();\n\n\t\t\t\tif ( line === '' ) continue;\n\n\t\t\t\tconst lineValues = line.split( /\\s+/ );\n\t\t\t\tconst lineType = lineValues.shift();\n\t\t\t\tline = lineValues.join( ' ' );\n\n\t\t\t\tswitch ( lineType ) {\n\n\t\t\t\t\tcase 'format':\n\n\t\t\t\t\t\theader.format = lineValues[ 0 ];\n\t\t\t\t\t\theader.version = lineValues[ 1 ];\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'comment':\n\n\t\t\t\t\t\theader.comments.push( line );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'element':\n\n\t\t\t\t\t\tif ( currentElement !== undefined ) {\n\n\t\t\t\t\t\t\theader.elements.push( currentElement );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrentElement = {};\n\t\t\t\t\t\tcurrentElement.name = lineValues[ 0 ];\n\t\t\t\t\t\tcurrentElement.count = parseInt( lineValues[ 1 ] );\n\t\t\t\t\t\tcurrentElement.properties = [];\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'property':\n\n\t\t\t\t\t\tcurrentElement.properties.push( make_ply_element_property( lineValues, scope.propertyNameMapping ) );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'obj_info':\n\n\t\t\t\t\t\theader.objInfo = line;\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tconsole.log( 'unhandled', lineType, lineValues );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( currentElement !== undefined ) {\n\n\t\t\t\theader.elements.push( currentElement );\n\n\t\t\t}\n\n\t\t\treturn header;\n\n\t\t}\n\n\t\tfunction parseASCIINumber( n, type ) {\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 'char': case 'uchar': case 'short': case 'ushort': case 'int': case 'uint':\n\t\t\t\tcase 'int8': case 'uint8': case 'int16': case 'uint16': case 'int32': case 'uint32':\n\n\t\t\t\t\treturn parseInt( n );\n\n\t\t\t\tcase 'float': case 'double': case 'float32': case 'float64':\n\n\t\t\t\t\treturn parseFloat( n );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseASCIIElement( properties, line ) {\n\n\t\t\tconst values = line.split( /\\s+/ );\n\n\t\t\tconst element = {};\n\n\t\t\tfor ( let i = 0; i < properties.length; i ++ ) {\n\n\t\t\t\tif ( properties[ i ].type === 'list' ) {\n\n\t\t\t\t\tconst list = [];\n\t\t\t\t\tconst n = parseASCIINumber( values.shift(), properties[ i ].countType );\n\n\t\t\t\t\tfor ( let j = 0; j < n; j ++ ) {\n\n\t\t\t\t\t\tlist.push( parseASCIINumber( values.shift(), properties[ i ].itemType ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\telement[ properties[ i ].name ] = list;\n\n\t\t\t\t} else {\n\n\t\t\t\t\telement[ properties[ i ].name ] = parseASCIINumber( values.shift(), properties[ i ].type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn element;\n\n\t\t}\n\n\t\tfunction createBuffer() {\n\n\t\t\tconst buffer = {\n\t\t\t  indices: [],\n\t\t\t  vertices: [],\n\t\t\t  normals: [],\n\t\t\t  uvs: [],\n\t\t\t  faceVertexUvs: [],\n\t\t\t  colors: [],\n\t\t\t};\n\n\t\t\tfor ( const customProperty of Object.keys( scope.customPropertyMapping ) ) {\n\n\t\t\t  buffer[ customProperty ] = [];\n\n\t\t\t}\n\n\t\t\treturn buffer;\n\n\t\t}\n\n\t\tfunction mapElementAttributes( properties ) {\n\n\t\t\tconst elementNames = properties.map( property => {\n\n\t\t\t\treturn property.name;\n\n\t\t\t} );\n\n\t\t\tfunction findAttrName( names ) {\n\n\t\t\t\tfor ( let i = 0, l = names.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst name = names[ i ];\n\n\t\t\t\t\tif ( elementNames.includes( name ) ) return name;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tattrX: findAttrName( [ 'x', 'px', 'posx' ] ) || 'x',\n\t\t\t\tattrY: findAttrName( [ 'y', 'py', 'posy' ] ) || 'y',\n\t\t\t\tattrZ: findAttrName( [ 'z', 'pz', 'posz' ] ) || 'z',\n\t\t\t\tattrNX: findAttrName( [ 'nx', 'normalx' ] ),\n\t\t\t\tattrNY: findAttrName( [ 'ny', 'normaly' ] ),\n\t\t\t\tattrNZ: findAttrName( [ 'nz', 'normalz' ] ),\n\t\t\t\tattrS: findAttrName( [ 's', 'u', 'texture_u', 'tx' ] ),\n\t\t\t\tattrT: findAttrName( [ 't', 'v', 'texture_v', 'ty' ] ),\n\t\t\t\tattrR: findAttrName( [ 'red', 'diffuse_red', 'r', 'diffuse_r' ] ),\n\t\t\t\tattrG: findAttrName( [ 'green', 'diffuse_green', 'g', 'diffuse_g' ] ),\n\t\t\t\tattrB: findAttrName( [ 'blue', 'diffuse_blue', 'b', 'diffuse_b' ] ),\n\t\t\t};\n\n\t\t}\n\n\t\tfunction parseASCII( data, header ) {\n\n\t\t\t// PLY ascii format specification, as per http://en.wikipedia.org/wiki/PLY_(file_format)\n\n\t\t\tconst buffer = createBuffer();\n\n\t\t\tlet result;\n\n\t\t\tconst patternBody = /end_header\\s([\\s\\S]*)$/;\n\t\t\tlet body = '';\n\t\t\tif ( ( result = patternBody.exec( data ) ) !== null ) {\n\n\t\t\t\tbody = result[ 1 ];\n\n\t\t\t}\n\n\t\t\tconst lines = body.split( /\\r\\n|\\r|\\n/ );\n\t\t\tlet currentElement = 0;\n\t\t\tlet currentElementCount = 0;\n\t\t\tlet elementDesc = header.elements[ currentElement ];\n\t\t\tlet attributeMap = mapElementAttributes( elementDesc.properties );\n\n\t\t\tfor ( let i = 0; i < lines.length; i ++ ) {\n\n\t\t\t\tlet line = lines[ i ];\n\t\t\t\tline = line.trim();\n\t\t\t\tif ( line === '' ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tif ( currentElementCount >= elementDesc.count ) {\n\n\t\t\t\t\tcurrentElement ++;\n\t\t\t\t\tcurrentElementCount = 0;\n\t\t\t\t\telementDesc = header.elements[ currentElement ];\n\n\t\t\t\t\tattributeMap = mapElementAttributes( elementDesc.properties );\n\n\t\t\t\t}\n\n\t\t\t\tconst element = parseASCIIElement( elementDesc.properties, line );\n\n\t\t\t\thandleElement( buffer, elementDesc.name, element, attributeMap );\n\n\t\t\t\tcurrentElementCount ++;\n\n\t\t\t}\n\n\t\t\treturn postProcess( buffer );\n\n\t\t}\n\n\t\tfunction postProcess( buffer ) {\n\n\t\t\tlet geometry = new BufferGeometry();\n\n\t\t\t// mandatory buffer data\n\n\t\t\tif ( buffer.indices.length > 0 ) {\n\n\t\t\t\tgeometry.setIndex( buffer.indices );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( buffer.vertices, 3 ) );\n\n\t\t\t// optional buffer data\n\n\t\t\tif ( buffer.normals.length > 0 ) {\n\n\t\t\t\tgeometry.setAttribute( 'normal', new Float32BufferAttribute( buffer.normals, 3 ) );\n\n\t\t\t}\n\n\t\t\tif ( buffer.uvs.length > 0 ) {\n\n\t\t\t\tgeometry.setAttribute( 'uv', new Float32BufferAttribute( buffer.uvs, 2 ) );\n\n\t\t\t}\n\n\t\t\tif ( buffer.colors.length > 0 ) {\n\n\t\t\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( buffer.colors, 3 ) );\n\n\t\t\t}\n\n\t\t\tif ( buffer.faceVertexUvs.length > 0 ) {\n\n\t\t\t\tgeometry = geometry.toNonIndexed();\n\t\t\t\tgeometry.setAttribute( 'uv', new Float32BufferAttribute( buffer.faceVertexUvs, 2 ) );\n\n\t\t\t}\n\n\t\t\t// custom buffer data\n\n\t\t\tfor ( const customProperty of Object.keys( scope.customPropertyMapping ) ) {\n\n\t\t\t\tif ( buffer[ customProperty ].length > 0 ) {\n\n\t\t\t\t  \tgeometry.setAttribute(\n\t\t\t\t\t\tcustomProperty,\n\t\t\t\t\t\tnew Float32BufferAttribute(\n\t\t\t\t\t  \t\tbuffer[ customProperty ],\n\t\t\t\t\t  \t\tscope.customPropertyMapping[ customProperty ].length\n\t\t\t\t\t\t)\n\t\t\t\t  \t);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t\tfunction handleElement( buffer, elementName, element, cacheEntry ) {\n\n\t\t\tif ( elementName === 'vertex' ) {\n\n\t\t\t\tbuffer.vertices.push( element[ cacheEntry.attrX ], element[ cacheEntry.attrY ], element[ cacheEntry.attrZ ] );\n\n\t\t\t\tif ( cacheEntry.attrNX !== null && cacheEntry.attrNY !== null && cacheEntry.attrNZ !== null ) {\n\n\t\t\t\t\tbuffer.normals.push( element[ cacheEntry.attrNX ], element[ cacheEntry.attrNY ], element[ cacheEntry.attrNZ ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( cacheEntry.attrS !== null && cacheEntry.attrT !== null ) {\n\n\t\t\t\t\tbuffer.uvs.push( element[ cacheEntry.attrS ], element[ cacheEntry.attrT ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( cacheEntry.attrR !== null && cacheEntry.attrG !== null && cacheEntry.attrB !== null ) {\n\n\t\t\t\t\t_color.setRGB(\n\t\t\t\t\t\telement[ cacheEntry.attrR ] / 255.0,\n\t\t\t\t\t\telement[ cacheEntry.attrG ] / 255.0,\n\t\t\t\t\t\telement[ cacheEntry.attrB ] / 255.0\n\t\t\t\t\t).convertSRGBToLinear();\n\n\t\t\t\t\tbuffer.colors.push( _color.r, _color.g, _color.b );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( const customProperty of Object.keys( scope.customPropertyMapping ) ) {\n\n\t\t\t\t\tfor ( const elementProperty of scope.customPropertyMapping[ customProperty ] ) {\n\n\t\t\t\t\t  buffer[ customProperty ].push( element[ elementProperty ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( elementName === 'face' ) {\n\n\t\t\t\tconst vertex_indices = element.vertex_indices || element.vertex_index; // issue #9338\n\t\t\t\tconst texcoord = element.texcoord;\n\n\t\t\t\tif ( vertex_indices.length === 3 ) {\n\n\t\t\t\t\tbuffer.indices.push( vertex_indices[ 0 ], vertex_indices[ 1 ], vertex_indices[ 2 ] );\n\n\t\t\t\t\tif ( texcoord && texcoord.length === 6 ) {\n\n\t\t\t\t\t\tbuffer.faceVertexUvs.push( texcoord[ 0 ], texcoord[ 1 ] );\n\t\t\t\t\t\tbuffer.faceVertexUvs.push( texcoord[ 2 ], texcoord[ 3 ] );\n\t\t\t\t\t\tbuffer.faceVertexUvs.push( texcoord[ 4 ], texcoord[ 5 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( vertex_indices.length === 4 ) {\n\n\t\t\t\t\tbuffer.indices.push( vertex_indices[ 0 ], vertex_indices[ 1 ], vertex_indices[ 3 ] );\n\t\t\t\t\tbuffer.indices.push( vertex_indices[ 1 ], vertex_indices[ 2 ], vertex_indices[ 3 ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction binaryReadElement( at, properties ) {\n\n\t\t\tconst element = {};\n\t\t\tlet read = 0;\n\n\t\t\tfor ( let i = 0; i < properties.length; i ++ ) {\n\n\t\t\t\tconst property = properties[ i ];\n\t\t\t\tconst valueReader = property.valueReader;\n\n\t\t\t\tif ( property.type === 'list' ) {\n\n\t\t\t\t\tconst list = [];\n\n\t\t\t\t\tconst n = property.countReader.read( at + read );\n\t\t\t\t\tread += property.countReader.size;\n\n\t\t\t\t\tfor ( let j = 0; j < n; j ++ ) {\n\n\t\t\t\t\t\tlist.push( valueReader.read( at + read ) );\n\t\t\t\t\t\tread += valueReader.size;\n\n\t\t\t\t\t}\n\n\t\t\t\t\telement[ property.name ] = list;\n\n\t\t\t\t} else {\n\n\t\t\t\t\telement[ property.name ] = valueReader.read( at + read );\n\t\t\t\t\tread += valueReader.size;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn [ element, read ];\n\n\t\t}\n\n\t\tfunction setPropertyBinaryReaders( properties, body, little_endian ) {\n\n\t\t\tfunction getBinaryReader( dataview, type, little_endian ) {\n\n\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\t// corespondences for non-specific length types here match rply:\n\t\t\t\t\tcase 'int8':\tcase 'char':\treturn { read: ( at ) => {\n\n\t\t\t\t\t\treturn dataview.getInt8( at );\n\n\t\t\t\t\t}, size: 1 };\n\t\t\t\t\tcase 'uint8':\tcase 'uchar':\treturn { read: ( at ) => {\n\n\t\t\t\t\t\treturn dataview.getUint8( at );\n\n\t\t\t\t\t}, size: 1 };\n\t\t\t\t\tcase 'int16':\tcase 'short':\treturn { read: ( at ) => {\n\n\t\t\t\t\t\treturn dataview.getInt16( at, little_endian );\n\n\t\t\t\t\t}, size: 2 };\n\t\t\t\t\tcase 'uint16':\tcase 'ushort':\treturn { read: ( at ) => {\n\n\t\t\t\t\t\treturn dataview.getUint16( at, little_endian );\n\n\t\t\t\t\t}, size: 2 };\n\t\t\t\t\tcase 'int32':\tcase 'int':\t\treturn { read: ( at ) => {\n\n\t\t\t\t\t\treturn dataview.getInt32( at, little_endian );\n\n\t\t\t\t\t}, size: 4 };\n\t\t\t\t\tcase 'uint32':\tcase 'uint':\treturn { read: ( at ) => {\n\n\t\t\t\t\t\treturn dataview.getUint32( at, little_endian );\n\n\t\t\t\t\t}, size: 4 };\n\t\t\t\t\tcase 'float32': case 'float':\treturn { read: ( at ) => {\n\n\t\t\t\t\t\treturn dataview.getFloat32( at, little_endian );\n\n\t\t\t\t\t}, size: 4 };\n\t\t\t\t\tcase 'float64': case 'double':\treturn { read: ( at ) => {\n\n\t\t\t\t\t\treturn dataview.getFloat64( at, little_endian );\n\n\t\t\t\t\t}, size: 8 };\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = properties.length; i < l; i ++ ) {\n\n\t\t\t\tconst property = properties[ i ];\n\n\t\t\t\tif ( property.type === 'list' ) {\n\n\t\t\t\t\tproperty.countReader = getBinaryReader( body, property.countType, little_endian );\n\t\t\t\t\tproperty.valueReader = getBinaryReader( body, property.itemType, little_endian );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tproperty.valueReader = getBinaryReader( body, property.type, little_endian );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseBinary( data, header ) {\n\n\t\t\tconst buffer = createBuffer();\n\n\t\t\tconst little_endian = ( header.format === 'binary_little_endian' );\n\t\t\tconst body = new DataView( data, header.headerLength );\n\t\t\tlet result, loc = 0;\n\n\t\t\tfor ( let currentElement = 0; currentElement < header.elements.length; currentElement ++ ) {\n\n\t\t\t\tconst elementDesc = header.elements[ currentElement ];\n\t\t\t\tconst properties = elementDesc.properties;\n\t\t\t\tconst attributeMap = mapElementAttributes( properties );\n\n\t\t\t\tsetPropertyBinaryReaders( properties, body, little_endian );\n\n\t\t\t\tfor ( let currentElementCount = 0; currentElementCount < elementDesc.count; currentElementCount ++ ) {\n\n\t\t\t\t\tresult = binaryReadElement( loc, properties );\n\t\t\t\t\tloc += result[ 1 ];\n\t\t\t\t\tconst element = result[ 0 ];\n\n\t\t\t\t\thandleElement( buffer, elementDesc.name, element, attributeMap );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn postProcess( buffer );\n\n\t\t}\n\n\t\tfunction extractHeaderText( bytes ) {\n\n\t\t\tlet i = 0;\n\t\t\tlet cont = true;\n\n\t\t\tlet line = '';\n\t\t\tconst lines = [];\n\n\t\t\tdo {\n\n\t\t\t\tconst c = String.fromCharCode( bytes[ i ++ ] );\n\n\t\t\t\tif ( c !== '\\n' && c !== '\\r' ) {\n\n\t\t\t\t\tline += c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( line === 'end_header' ) cont = false;\n\t\t\t\t\tif ( line !== '' ) {\n\n\t\t\t\t\t\tlines.push( line );\n\t\t\t\t\t\tline = '';\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} while ( cont && i < bytes.length );\n\n\t\t\treturn lines.join( '\\r' ) + '\\r';\n\n\t\t}\n\n\t\t//\n\n\t\tlet geometry;\n\t\tconst scope = this;\n\n\t\tif ( data instanceof ArrayBuffer ) {\n\n\t\t\tconst bytes = new Uint8Array( data );\n\t\t\tconst headerText = extractHeaderText( bytes );\n\t\t\tconst header = parseHeader( headerText );\n\n\t\t\tif ( header.format === 'ascii' ) {\n\n\t\t\t\tconst text = new TextDecoder().decode( bytes );\n\n\t\t\t\tgeometry = parseASCII( text, header );\n\n\t\t\t} else {\n\n\t\t\t\tgeometry = parseBinary( data, header );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tgeometry = parseASCII( data, parseHeader( data ) );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nexport { PLYLoader };\n","import Stats from 'stats.js/src/Stats';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { PLYLoader } from 'three/examples/jsm/loaders/PLYLoader.js';\nimport { GUI } from 'three/examples/jsm/libs/lil-gui.module.min.js';\nimport {\n\tacceleratedRaycast, computeBoundsTree, disposeBoundsTree, MeshBVHVisualizer, INTERSECTED, NOT_INTERSECTED,\n\tSAH, CENTER, AVERAGE,\n} from '..';\n\nTHREE.Mesh.prototype.raycast = acceleratedRaycast;\nTHREE.BufferGeometry.prototype.computeBoundsTree = computeBoundsTree;\nTHREE.BufferGeometry.prototype.disposeBoundsTree = disposeBoundsTree;\n\nlet stats;\nlet scene, camera, renderer, bvhMesh, helper, pointCloud, outputContainer;\nlet mouse = new THREE.Vector2();\nlet sphereCollision;\n\nconst plyPath = '../models/point_cloud_porsche_911_1.7M_vertices/scene.ply';\nconst raycaster = new THREE.Raycaster();\nconst params = {\n\n\tdisplayHelper: false,\n\thelperDepth: 10,\n\tdisplayParents: false,\n\n\tstrategy: CENTER,\n\tpointSize: 0.005,\n\traycastThreshold: 0.005,\n\tuseBVH: true,\n\n};\n\nfunction init() {\n\n\tconst bgColor = 0x263238 / 2;\n\n\toutputContainer = document.getElementById( 'output' );\n\n\t// renderer setup\n\trenderer = new THREE.WebGLRenderer( { antialias: true } );\n\trenderer.setPixelRatio( window.devicePixelRatio );\n\trenderer.setSize( window.innerWidth, window.innerHeight );\n\trenderer.setClearColor( bgColor, 1 );\n\tdocument.body.appendChild( renderer.domElement );\n\n\t// scene setup\n\tscene = new THREE.Scene();\n\n\t// camera setup\n\tcamera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 50 );\n\tcamera.position.set( 3, 3, 3 );\n\tcamera.far = 100;\n\tcamera.updateProjectionMatrix();\n\n\tnew OrbitControls( camera, renderer.domElement );\n\n\t// stats setup\n\tstats = new Stats();\n\tdocument.body.appendChild( stats.dom );\n\n\n\twindow.addEventListener( 'resize', function () {\n\n\t\tcamera.aspect = window.innerWidth / window.innerHeight;\n\t\tcamera.updateProjectionMatrix();\n\n\t\trenderer.setSize( window.innerWidth, window.innerHeight );\n\n\t}, false );\n\n\t// Load point cloud\n\tconst loader = new PLYLoader();\n\tloader.load( plyPath, geometry => {\n\n\t\tgeometry.center();\n\t\tconst material = new THREE.PointsMaterial( { size: params.pointSize, vertexColors: true } );\n\t\tpointCloud = new THREE.Points( geometry, material );\n\t\tpointCloud.matrixAutoUpdate = false;\n\n\t\tscene.add( pointCloud );\n\n\t\t// BVH Mesh creation\n\t\tconst indices = [];\n\t\tconst bvhGeometry = geometry.clone();\n\t\tlet verticesLength = bvhGeometry.attributes.position.count;\n\t\tfor ( let i = 0, l = verticesLength; i < l; i ++ ) {\n\n\t\t\tindices.push( i, i, i );\n\n\t\t}\n\n\t\tbvhGeometry.setIndex( indices );\n\t\tconst bvhMaterial = new THREE.MeshBasicMaterial( { color: 0xff0000 } );\n\t\tbvhMesh = new THREE.Mesh( bvhGeometry, bvhMaterial );\n\n\t\tconsole.time( 'computeBoundsTree' );\n\t\tbvhMesh.geometry.computeBoundsTree( { mode: params.mode } );\n\t\tconsole.timeEnd( 'computeBoundsTree' );\n\n\t\thelper = new MeshBVHVisualizer( bvhMesh, params.depth );\n\t\tscene.add( helper );\n\n\t} );\n\n\tconst geometry = new THREE.SphereGeometry( 0.01, 32, 32 );\n\tconst material = new THREE.MeshBasicMaterial( { color: 0xffff00, opacity: 0.9, transparent: true } );\n\tsphereCollision = new THREE.Mesh( geometry, material );\n\tsphereCollision.visible = false;\n\tscene.add( sphereCollision );\n\n\tconst gui = new GUI();\n\tconst helperFolder = gui.addFolder( 'helper' );\n\thelperFolder.add( params, 'displayHelper' );\n\thelperFolder.add( params, 'displayParents' ).onChange( v => {\n\n\t\thelper.displayParents = v;\n\t\thelper.update();\n\n\t} );\n\thelperFolder.add( params, 'helperDepth', 1, 20, 1 ).name( 'depth' ).onChange( v => {\n\n\t\thelper.depth = parseInt( v );\n\t\thelper.update();\n\n\t} );\n\thelperFolder.open();\n\n\tconst pointsFolder = gui.addFolder( 'points' );\n\tpointsFolder.add( params, 'useBVH' );\n\tpointsFolder.add( params, 'strategy', { CENTER, AVERAGE, SAH } ).onChange( v => {\n\n\t\tconsole.time( 'computeBoundsTree' );\n\t\tbvhMesh.geometry.computeBoundsTree( { strategy: parseInt( v ) } );\n\t\tconsole.timeEnd( 'computeBoundsTree' );\n\t\thelper.update();\n\n\t} );\n\tpointsFolder.add( params, 'pointSize', 0.001, 0.01, 0.001 );\n\tpointsFolder.add( params, 'raycastThreshold', 0.001, 0.01, 0.001 );\n\tpointsFolder.open();\n\n}\n\nwindow.addEventListener( 'pointermove', ( event ) => {\n\n\tif ( ! bvhMesh ) {\n\n\t\treturn;\n\n\t}\n\n\tmouse.x = ( event.clientX / window.innerWidth ) * 2 - 1;\n\tmouse.y = - ( event.clientY / window.innerHeight ) * 2 + 1;\n\traycaster.setFromCamera( mouse, camera );\n\n\tconst startTime = window.performance.now();\n\tif ( params.useBVH ) {\n\n\t\tsphereCollision.visible = false;\n\n\t\tconst inverseMatrix = new THREE.Matrix4();\n\t\tinverseMatrix.copy( bvhMesh.matrixWorld ).invert();\n\t\traycaster.ray.applyMatrix4( inverseMatrix );\n\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst localThreshold = threshold / ( ( bvhMesh.scale.x + bvhMesh.scale.y + bvhMesh.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst { ray } = raycaster;\n\t\tlet closestDistance = Infinity;\n\t\tbvhMesh.geometry.boundsTree.shapecast( {\n\t\t\tboundsTraverseOrder: box => {\n\n\t\t\t\t// traverse the closer bounds first.\n\t\t\t\treturn box.distanceToPoint( ray.origin );\n\n\t\t\t},\n\t\t\tintersectsBounds: ( box, isLeaf, score ) => {\n\n\t\t\t\t// if we've already found a point that's closer then the full bounds then\n\t\t\t\t// don't traverse further.\n\t\t\t\tif ( score > closestDistance ) {\n\n\t\t\t\t\treturn NOT_INTERSECTED;\n\n\t\t\t\t}\n\n\t\t\t\tbox.expandByScalar( localThreshold );\n\t\t\t\treturn ray.intersectsBox( box ) ? INTERSECTED : NOT_INTERSECTED;\n\n\t\t\t},\n\t\t\tintersectsTriangle: triangle => {\n\n\t\t\t\tconst distancesToRaySq = ray.distanceSqToPoint( triangle.a );\n\t\t\t\tif ( distancesToRaySq < localThresholdSq ) {\n\n\t\t\t\t\t// track the closest found point distance so we can early out traversal and only\n\t\t\t\t\t// use the closest point along the ray.\n\t\t\t\t\tconst distanceToPoint = ray.origin.distanceTo( triangle.a );\n\t\t\t\t\tif ( distanceToPoint < closestDistance ) {\n\n\t\t\t\t\t\tclosestDistance = distanceToPoint;\n\t\t\t\t\t\tsphereCollision.position.copy( triangle.a ).applyMatrix4( bvhMesh.matrixWorld );\n\t\t\t\t\t\tsphereCollision.visible = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\t\t} );\n\n\t} else {\n\n\t\tconst intersects = raycaster.intersectObject( pointCloud, true );\n\t\tconst hit = intersects[ 0 ];\n\t\tif ( hit ) {\n\n\t\t\tsphereCollision.position.copy( hit.point );\n\t\t\tsphereCollision.visible = true;\n\n\t\t} else {\n\n\t\t\tsphereCollision.visible = false;\n\n\t\t}\n\n\t}\n\n\tconst delta = window.performance.now() - startTime;\n\toutputContainer.innerText = `${ delta.toFixed( 2 ) }ms`;\n\n}, false );\n\nfunction render() {\n\n\trequestAnimationFrame( render );\n\n\tif ( pointCloud ) {\n\n\t\tpointCloud.material.size = params.pointSize;\n\t\thelper.visible = params.displayHelper;\n\t\traycaster.params.Points.threshold = params.raycastThreshold;\n\n\t}\n\n\tstats.begin();\n\n\trenderer.render( scene, camera );\n\tstats.end();\n\n}\n\n\ninit();\nrender();\n"],"names":["$cd1d3d651be7f2fc$export$2e2bcd8739ae039","mode","container","document","createElement","addPanel","panel","appendChild","dom","showPanel","id","i","children","length","style","display","cssText","addEventListener","event","preventDefault","beginTime","performance","Date","now","prevTime","frames","fpsPanel","Panel","msPanel","self","memory","memPanel","REVISION","begin","end","time","update","usedJSHeapSize","jsHeapSizeLimit","this","domElement","setMode","name","fg","bg","min","Infinity","max","round","Math","PR","window","devicePixelRatio","WIDTH","HEIGHT","TEXT_X","TEXT_Y","GRAPH_X","GRAPH_Y","GRAPH_WIDTH","GRAPH_HEIGHT","canvas","width","height","context","getContext","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","value","maxValue","drawImage","$cecdfc71d7a8184f$var$_color","Color","$cecdfc71d7a8184f$export$363d99ab40f454cb","$ilwiq","Loader","manager","super","propertyNameMapping","customPropertyMapping","load","url","onLoad","onProgress","onError","scope","loader","FileLoader","setPath","path","setResponseType","setRequestHeader","requestHeader","setWithCredentials","withCredentials","text","parse","e","console","error","itemError","setPropertyNameMapping","mapping","setCustomPropertyNameMapping","data","parseHeader","headerText","headerLength","result","exec","Blob","size","header","comments","elements","objInfo","lines","split","currentElement","make_ply_element_property","propertValues","property","type","countType","itemType","line","trim","lineValues","lineType","shift","join","format","version","push","undefined","count","parseInt","properties","log","parseASCIINumber","n","parseFloat","parseASCIIElement","values","element","list","j","createBuffer","buffer","indices","vertices","normals","uvs","faceVertexUvs","colors","customProperty","Object","keys","mapElementAttributes","elementNames","map","findAttrName","names","l","includes","attrX","attrY","attrZ","attrNX","attrNY","attrNZ","attrS","attrT","attrR","attrG","attrB","parseASCII","body","currentElementCount","elementDesc","attributeMap","handleElement","postProcess","geometry","BufferGeometry","setIndex","setAttribute","Float32BufferAttribute","toNonIndexed","computeBoundingSphere","elementName","cacheEntry","setRGB","convertSRGBToLinear","r","g","b","elementProperty","vertex_indices","vertex_index","texcoord","binaryReadElement","at","read","valueReader","countReader","setPropertyBinaryReaders","little_endian","getBinaryReader","dataview","getInt8","getUint8","getInt16","getUint16","getInt32","getUint32","getFloat32","getFloat64","ArrayBuffer","bytes","Uint8Array","cont","c","String","fromCharCode","extractHeaderText","TextDecoder","decode","DataView","loc","parseBinary","$d988e066c7f02c6a$var$stats","$d988e066c7f02c6a$var$scene","$d988e066c7f02c6a$var$camera","$d988e066c7f02c6a$var$renderer","$d988e066c7f02c6a$var$bvhMesh","$d988e066c7f02c6a$var$helper","$d988e066c7f02c6a$var$pointCloud","$d988e066c7f02c6a$var$outputContainer","Mesh","prototype","raycast","$4CEV9","acceleratedRaycast","computeBoundsTree","disposeBoundsTree","$d988e066c7f02c6a$var$sphereCollision","$d988e066c7f02c6a$var$mouse","Vector2","$d988e066c7f02c6a$var$raycaster","Raycaster","$d988e066c7f02c6a$var$params","displayHelper","helperDepth","displayParents","strategy","CENTER","pointSize","raycastThreshold","useBVH","x","clientX","innerWidth","y","clientY","innerHeight","setFromCamera","startTime","visible","inverseMatrix","Matrix4","copy","matrixWorld","invert","ray","applyMatrix4","localThreshold","params","Points","threshold","scale","z","localThresholdSq","closestDistance","boundsTree","shapecast","boundsTraverseOrder","box","distanceToPoint","origin","intersectsBounds","isLeaf","score","NOT_INTERSECTED","expandByScalar","intersectsBox","INTERSECTED","intersectsTriangle","triangle","distanceSqToPoint","a","distanceTo","position","hit","intersectObject","point","delta","innerText","toFixed","getElementById","WebGLRenderer","antialias","setPixelRatio","setSize","setClearColor","Scene","PerspectiveCamera","set","far","updateProjectionMatrix","$5Rd1x","OrbitControls","aspect","center","material","PointsMaterial","vertexColors","matrixAutoUpdate","add","bvhGeometry","clone","attributes","bvhMaterial","MeshBasicMaterial","color","timeEnd","MeshBVHVisualizer","depth","SphereGeometry","opacity","transparent","gui","$jiuw3","GUI","helperFolder","addFolder","onChange","v","open","pointsFolder","AVERAGE","SAH","$d988e066c7f02c6a$var$init","$d988e066c7f02c6a$var$render","requestAnimationFrame","render"],"version":3,"file":"pointCloudIntersection.812fc1d5.js.map"}