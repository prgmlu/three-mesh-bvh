var t="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},e={},n={},o=t.parcelRequire4485;null==o&&((o=function(t){if(t in e)return e[t].exports;if(t in n){var o=n[t];delete n[t];var r={id:t,exports:{}};return e[t]=r,o.call(r.exports,r,r.exports),r.exports}var a=new Error("Cannot find module '"+t+"'");throw a.code="MODULE_NOT_FOUND",a}).register=function(t,e){n[t]=e},t.parcelRequire4485=o);var r=o("ilwiq"),a=o("5Rd1x"),i=o("7lx9d"),s=o("RPVlj"),l=o("jiuw3"),d=o("4CEV9");let u,c,m,h,p,f,v,g,w,y;r.Mesh.prototype.raycast=d.acceleratedRaycast,r.BufferGeometry.prototype.computeBoundsTree=d.computeBoundsTree,r.BufferGeometry.prototype.disposeBoundsTree=d.disposeBoundsTree;let x=new r.Vector2;const b=new Float32Array(1),C={options:{strategy:d.SAH,maxLeafTris:10,maxDepth:40,rebuild:function(){R()}},visualization:{displayMesh:!0,simpleColors:!1,outline:!0,traversalThreshold:50},benchmark:{displayRays:!1,firstHitOnly:!0,rotations:10,castCount:1e3}};class M extends r.ShaderMaterial{constructor(t){super({uniforms:{map:{value:null},threshold:{value:35},boundsColor:{value:new r.Color(16777215)},backgroundColor:{value:new r.Color(0)},thresholdColor:{value:new r.Color(16711680)},resolution:{value:new r.Vector2},outlineAlpha:{value:.5}},vertexShader:"\n\t\t\t\tvarying vec2 vUv;\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t\t\t}\n\t\t\t",fragmentShader:"\n\t\t\t\tuniform sampler2D map;\n\t\t\t\tuniform float threshold;\n\n\t\t\t\tuniform vec3 thresholdColor;\n\t\t\t\tuniform vec3 boundsColor;\n\t\t\t\tuniform vec3 backgroundColor;\n\t\t\t\tuniform vec2 resolution;\n\t\t\t\tuniform float outlineAlpha;\n\n\t\t\t\tvarying vec2 vUv;\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tfloat count = texture2D( map, vUv ).r;\n\n\t\t\t\t\tif ( count == 0.0 ) {\n\n\t\t\t\t\t\tvec2 offset = 1.0 / resolution;\n\t\t\t\t\t\tfloat c1 = texture2D( map, vUv + offset * vec2( 1.0, 0.0 ) ).r;\n\t\t\t\t\t\tfloat c2 = texture2D( map, vUv + offset * vec2( - 1.0, 0.0 ) ).r;\n\t\t\t\t\t\tfloat c3 = texture2D( map, vUv + offset * vec2( 0.0, 1.0 ) ).r;\n\t\t\t\t\t\tfloat c4 = texture2D( map, vUv + offset * vec2( 0.0, - 1.0 ) ).r;\n\n\t\t\t\t\t\tfloat maxC = max( c1, max( c2, max( c3, c4 ) ) );\n\t\t\t\t\t\tif ( maxC != 0.0 ) {\n\n\t\t\t\t\t\t\tgl_FragColor.rgb = mix( backgroundColor, mix( boundsColor, vec3( 1.0 ), 0.5 ), outlineAlpha );\n\t\t\t\t\t\t\tgl_FragColor.a = 1.0;\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( count > threshold ) {\n\n\t\t\t\t\t\tgl_FragColor.rgb = thresholdColor.rgb;\n\t\t\t\t\t\tgl_FragColor.a = 1.0;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tfloat alpha = count / threshold;\n\t\t\t\t\t\tvec3 color = mix( boundsColor, vec3( 1.0 ), pow( alpha, 1.75 ) );\n\n\t\t\t\t\t\tgl_FragColor.rgb = mix( backgroundColor, color, alpha ).rgb ;\n\t\t\t\t\t\tgl_FragColor.a = 1.0;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t"});const e=this.uniforms;for(const t in e)Object.defineProperty(this,t,{get(){return this.uniforms[t].value},set(e){this.uniforms[t].value=e}});this.setValues(t)}}function T(){c.aspect=window.innerWidth/window.innerHeight,c.updateProjectionMatrix(),m.setSize(window.innerWidth,window.innerHeight),m.setPixelRatio(window.devicePixelRatio),w.setSize(window.innerWidth*window.devicePixelRatio,window.innerHeight*window.devicePixelRatio)}function R(){const t=performance.now();p.geometry.computeBoundsTree({strategy:parseInt(C.options.strategy),maxLeafTris:C.options.maxLeafTris,maxDepth:C.options.maxDepth});const e=performance.now()-t;h.update(),k();const n=d.getBVHExtremes(p.geometry.boundsTree)[0];f.innerText=`construction time        : ${e.toFixed(2)}ms\nsurface area score       : ${n.surfaceAreaScore.toFixed(2)}\ntotal nodes              : ${n.nodeCount}\ntotal leaf nodes         : ${n.leafNodeCount}\nmin / max tris per leaf  : ${n.tris.min} / ${n.tris.max}\nmin / max depth          : ${n.depth.min} / ${n.depth.max}\nmemory (incl. geometry)  : ${(1e-6*d.estimateMemoryInBytes(p.geometry.boundsTree)).toFixed(3)} mb \nmemory (excl. geometry)  : ${(1e-6*d.estimateMemoryInBytes(p.geometry.boundsTree._roots)).toFixed(3)} mb`}function F(t=!1){let e=null,n=null;t&&(p.updateMatrixWorld(),n=new r.BufferGeometry,g.geometry.dispose(),e=[]);const o=new r.Raycaster;o.firstHitOnly=C.benchmark.firstHitOnly;const a=C.benchmark.castCount,i=C.benchmark.rotations,{ray:s}=o,{origin:l,direction:d}=s,u=performance.now();for(let n=0;n<a;n++){const u=n/a-.5;if(l.set(Math.cos(.75*Math.PI*u)*Math.sin(2*i*Math.PI*n/a),2*u,Math.cos(.75*Math.PI*u)*Math.cos(2*i*Math.PI*n/a)).multiplyScalar(2.5),d.set(Math.cos(5*i*u),Math.sin(10*i*u),Math.sin(5*i*u)).sub(l).normalize(),o.intersectObject(p),t){const t=o.intersectObject(p)[0];if(e.push(l.clone()),t)e.push(t.point.clone());else{const t=new r.Vector3;s.at(5,t),e.push(t)}}}const c=performance.now()-u;return t&&(n.setFromPoints(e),g.geometry=n),c}let P=0,E=0;function k(){P=0,E=0}!function(){f=document.getElementById("output"),v=document.getElementById("benchmark"),m=new r.WebGLRenderer({antialias:!0}),m.setPixelRatio(window.devicePixelRatio),m.setSize(window.innerWidth,window.innerHeight),m.setClearColor(0,1),document.body.appendChild(m.domElement),w=new r.WebGLRenderTarget(1,1,{format:r.RedFormat,type:r.FloatType}),y=new s.FullScreenQuad(new M({map:w.texture,depthWrite:!1})),u=new r.Scene,c=new r.PerspectiveCamera(75,window.innerWidth/window.innerHeight,.1,50),c.position.set(-2.5,1.5,2.5),c.far=100,c.updateProjectionMatrix(),new a.OrbitControls(c,m.domElement),window.addEventListener("resize",T,!1),T(),(new i.GLTFLoader).load("../models/DragonAttenuation.glb",(t=>{t.scene.traverse((t=>{t.isMesh&&"Dragon"===t.name&&(p=t)})),p.material=new r.MeshBasicMaterial({colorWrite:!1}),p.geometry.center(),p.position.set(0,0,0),u.add(p),h=new d.MeshBVHVisualizer(p,40),h.displayEdges=!1,h.displayParents=!0,h.color.set(16777215),h.opacity=1,h.depth=40;const e=h.meshMaterial;e.blending=r.CustomBlending,e.blendDst=r.OneFactor,u.add(h),R(),F(!0)})),g=new r.LineSegments,g.material.opacity=.1,g.material.transparent=!0,g.material.depthWrite=!1,g.frustumCulled=!1,u.add(g);const t=new l.GUI,e=t.addFolder("BVH");e.add(C.options,"strategy",{CENTER:d.CENTER,AVERAGE:d.AVERAGE,SAH:d.SAH}),e.add(C.options,"maxLeafTris",1,30,1),e.add(C.options,"maxDepth",1,40,1),e.add(C.options,"rebuild"),e.open();const n=t.addFolder("Visualization");n.add(C.visualization,"displayMesh"),n.add(C.visualization,"simpleColors"),n.add(C.visualization,"outline"),n.add(C.visualization,"traversalThreshold",1,300,1),n.open();const o=t.addFolder("Benchmark");o.add(C.benchmark,"displayRays"),o.add(C.benchmark,"firstHitOnly").onChange(k),o.add(C.benchmark,"castCount",100,5e3,1).onChange((()=>{k(),F(!0)})),o.add(C.benchmark,"rotations",1,20,1).onChange((()=>{k(),F(!0)})),o.open(),window.addEventListener("pointermove",(t=>{x.set(t.clientX,window.innerHeight-t.clientY)}))}(),function t(){requestAnimationFrame(t);const e=m.getPixelRatio();m.readRenderTargetPixels(w,x.x*e,x.y*e,1,1,b),p&&(P=Math.min(P+1,50),E+=(F()-E)/P,v.innerText=`\ntraversal depth at mouse : ${Math.round(b[0])}\nbenchmark rolling avg    : ${E.toFixed(3)} ms`),C.visualization.simpleColors?(y.material.boundsColor.set(16777215),y.material.thresholdColor.set(16711680),y.material.backgroundColor.set(0)):(y.material.boundsColor.set(16763432),y.material.thresholdColor.set(15277667),y.material.backgroundColor.set(8231)),y.material.threshold=C.visualization.traversalThreshold,y.material.outlineAlpha=C.visualization.outline?.5:0,y.material.resolution.set(w.width,w.height),g.visible=!1,m.autoClear=!0,p&&(p.visible=C.visualization.displayMesh),m.setRenderTarget(w),m.render(u,c),m.setRenderTarget(null),y.render(m),m.autoClear=!1,g.visible=C.benchmark.displayRays,p&&m.render(p,c),m.render(g,c)}();
//# sourceMappingURL=inspector.e2ab9340.js.map
