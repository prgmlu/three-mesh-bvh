{"mappings":"imBAsBA,IAAuBA,EACDC,E,iFArBtB,IAAIC,EAAU,CAAC,EAoBfF,E,SAlBkBG,GAGhB,IAFA,IAAIC,EAAOC,OAAOD,KAAKD,GAEdG,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BJ,EAAQE,EAAKE,IAAMH,EAAMC,EAAKE,GAElC,EAaAL,E,SAXiBO,GACf,IAAIC,EAAWP,EAAQM,GAEvB,GAAgB,MAAZC,EACF,MAAM,IAAIC,MAAM,oCAAsCF,GAGxD,OAAOC,CACT,C,ICpBAE,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,qF,mHCG5CC,E,cAIXC,KAAKC,SAAU,EACfD,KAAKE,OAAS,IAAIC,OAAMR,EAAA,UACxBK,KAAKE,OAAOE,QAAUC,IAErB,MAAKA,EAAEC,QAEA,IAAIZ,MAAK,kEAAqEW,EAAEC,YAIhF,IAAIZ,MAAO,sDAAqD,CAMzE,CAEAa,SAAUC,EAAUC,EAAU,CAAC,GAE9B,GAAKT,KAAKC,QAET,MAAM,IAAIP,MAAO,+CAIlB,GAAqB,OAAhBM,KAAKE,OAET,MAAM,IAAIR,MAAO,oDAIlB,MAAOQ,OAACA,GAAWF,KAGnB,OAFAA,KAAKC,SAAU,EAER,IAAIS,SAAO,CAAIC,EAASC,KAE9BV,EAAOE,QAAUC,IAEhBO,EAAQ,IAAIlB,MAAK,0BAA6BW,EAAEC,YAChDN,KAAKC,SAAU,CAAK,EAIrBC,EAAOW,UAAYR,IAElBL,KAAKC,SAAU,EACf,MAAOa,KAACA,GAAST,EAEjB,GAAKS,EAAKC,MAETH,EAAQ,IAAIlB,MAAOoB,EAAKC,QACxBb,EAAOW,UAAY,UAEb,GAAKC,EAAKE,WAAa,CAE7B,MAAOA,WAACA,EAAUC,SAAEA,GAAaH,EAC3BI,EAAMC,EAAAC,QAAQC,YAAaL,EAAYR,EAAU,CAAEc,UAAU,IAC7DC,EAAgBlC,OAAOmC,OAAQ,CAEpCC,gBAAgB,GAEdhB,GAKH,GADAD,EAASkB,WAAWT,SAASU,MAAQV,EAChCT,EAASoB,MAEbpB,EAASoB,MAAMD,MAAQX,EAAWY,UAE5B,CAEN,MAAMC,EAAW,IAAIC,EAAAC,gBAAiBf,EAAWY,MAAO,GAAG,GAC3DpB,EAASc,SAAUO,EAEpB,CAEKN,EAAcE,iBAElBjB,EAASwB,YAAcd,EAAIe,eAAgB,IAAIH,EAAAI,OAIhDvB,EAASO,GACThB,EAAOW,UAAY,IAEpB,MAAYJ,EAAQ0B,YAEnB1B,EAAQ0B,WAAYrB,EAAKsB,SAAQ,EAMnC,MAAMR,EAAQpB,EAASoB,MAAQpB,EAASoB,MAAMD,MAAQ,KAChDV,EAAWT,EAASkB,WAAWT,SAASU,MAE9C,GAAKV,EAASoB,8BAAgCT,GAASA,EAAMS,6BAE5D,MAAM,IAAI3C,MAAO,oGAIlB,MAAM4C,EAAe,CAAErB,GAClBW,GAEJU,EAAaC,KAAMX,GAIpB1B,EAAOsC,YAAa,C,MAEnBZ,E,SACAX,EACAR,QAAS,IACLA,EACH0B,WAAY,KACZM,yBAA0BC,QAASjC,EAAQ0B,YAC3CQ,OAAQ,IAAMnC,EAASmC,UAGtBL,EAAaM,KAAKC,GAAOA,EAAIC,SAASC,QAAQC,GAAoC,oBAAtBC,qBAA2CD,aAAaC,qB,GAIzH,CAEAC,UAEClD,KAAKE,OAAOiD,YACZnD,KAAKE,OAAS,IAEf,CAEAiD,YAECC,QAAQC,KAAM,4EACdrD,KAAKkD,SAEN,E,uDClJD,IAAII,EAAG,IAAAC,IAAuB5D,EAAA,SAAAgB,QAA6C,SAAO6C,OAAAC,KAAAC,KAClFC,EAAAC,QAAiBC,EAAUP,EAAIQ,WAAYR,EAAIS,QAAQ,E,sCCAvDJ,EAAAC,QAAiB,SAAUI,EAAWD,EAAQE,GAC5C,GAAIF,IAAWG,KAAKC,SAASJ,OAG3B,OAAOC,EAGP,IAAII,EAASH,EAAQ,UAAYpE,KAAKwE,UAAUL,GAAa,IAAM,iBAAmBnE,KAAKwE,UAAUL,GAAa,KAClH,OAAOT,IAAIe,gBAAgB,IAAIC,KAAK,CAACH,GAAS,CAC5CI,KAAM,2BAGZ,C","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-52163d787155f5cf.js","src/workers/GenerateMeshBVHWorker.js","node_modules/@parcel/runtime-js/lib/runtime-246de6b485c5c7ec.js","node_modules/@parcel/runtime-js/lib/helpers/get-worker-url.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"bEy7u\\\":\\\"asyncGenerate.6b6e94f2.js\\\",\\\"b4BBl\\\":\\\"generateAsync.worker.5bf93d10.js\\\"}\"));","import { Box3, BufferAttribute } from 'three';\nimport { MeshBVH } from '../core/MeshBVH.js';\n\nexport class GenerateMeshBVHWorker {\n\n\tconstructor() {\n\n\t\tthis.running = false;\n\t\tthis.worker = new Worker( new URL( './generateAsync.worker.js', import.meta.url ), { type: 'module' } );\n\t\tthis.worker.onerror = e => {\n\n\t\t\tif ( e.message ) {\n\n\t\t\t\tthrow new Error( `GenerateMeshBVHWorker: Could not create Web Worker with error \"${ e.message }\"` );\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error( 'GenerateMeshBVHWorker: Could not create Web Worker.' );\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tgenerate( geometry, options = {} ) {\n\n\t\tif ( this.running ) {\n\n\t\t\tthrow new Error( 'GenerateMeshBVHWorker: Already running job.' );\n\n\t\t}\n\n\t\tif ( this.worker === null ) {\n\n\t\t\tthrow new Error( 'GenerateMeshBVHWorker: Worker has been disposed.' );\n\n\t\t}\n\n\t\tconst { worker } = this;\n\t\tthis.running = true;\n\n\t\treturn new Promise( ( resolve, reject ) => {\n\n\t\t\tworker.onerror = e => {\n\n\t\t\t\treject( new Error( `GenerateMeshBVHWorker: ${ e.message }` ) );\n\t\t\t\tthis.running = false;\n\n\t\t\t};\n\n\t\t\tworker.onmessage = e => {\n\n\t\t\t\tthis.running = false;\n\t\t\t\tconst { data } = e;\n\n\t\t\t\tif ( data.error ) {\n\n\t\t\t\t\treject( new Error( data.error ) );\n\t\t\t\t\tworker.onmessage = null;\n\n\t\t\t\t} else if ( data.serialized ) {\n\n\t\t\t\t\tconst { serialized, position } = data;\n\t\t\t\t\tconst bvh = MeshBVH.deserialize( serialized, geometry, { setIndex: false } );\n\t\t\t\t\tconst boundsOptions = Object.assign( {\n\n\t\t\t\t\t\tsetBoundingBox: true,\n\n\t\t\t\t\t}, options );\n\n\t\t\t\t\t// we need to replace the arrays because they're neutered entirely by the\n\t\t\t\t\t// webworker transfer.\n\t\t\t\t\tgeometry.attributes.position.array = position;\n\t\t\t\t\tif ( geometry.index ) {\n\n\t\t\t\t\t\tgeometry.index.array = serialized.index;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst newIndex = new BufferAttribute( serialized.index, 1, false );\n\t\t\t\t\t\tgeometry.setIndex( newIndex );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( boundsOptions.setBoundingBox ) {\n\n\t\t\t\t\t\tgeometry.boundingBox = bvh.getBoundingBox( new Box3() );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve( bvh );\n\t\t\t\t\tworker.onmessage = null;\n\n\t\t\t\t} else if ( options.onProgress ) {\n\n\t\t\t\t\toptions.onProgress( data.progress );\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\tconst index = geometry.index ? geometry.index.array : null;\n\t\t\tconst position = geometry.attributes.position.array;\n\n\t\t\tif ( position.isInterleavedBufferAttribute || index && index.isInterleavedBufferAttribute ) {\n\n\t\t\t\tthrow new Error( 'GenerateMeshBVHWorker: InterleavedBufferAttribute are not supported for the geometry attributes.' );\n\n\t\t\t}\n\n\t\t\tconst transferable = [ position ];\n\t\t\tif ( index ) {\n\n\t\t\t\ttransferable.push( index );\n\n\t\t\t}\n\n\t\t\tworker.postMessage( {\n\n\t\t\t\tindex,\n\t\t\t\tposition,\n\t\t\t\toptions: {\n\t\t\t\t\t...options,\n\t\t\t\t\tonProgress: null,\n\t\t\t\t\tincludedProgressCallback: Boolean( options.onProgress ),\n\t\t\t\t\tgroups: [ ... geometry.groups ],\n\t\t\t\t},\n\n\t\t\t}, transferable.map( arr => arr.buffer ).filter( v => ( typeof SharedArrayBuffer === 'undefined' ) || ! ( v instanceof SharedArrayBuffer ) ) );\n\n\t\t} );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.worker.terminate();\n\t\tthis.worker = null;\n\n\t}\n\n\tterminate() {\n\n\t\tconsole.warn( 'GenerateMeshBVHWorker: \"terminate\" is deprecated. Use \"dispose\" instead.' );\n\t\tthis.dispose();\n\n\t}\n\n}\n","let workerURL = require('./helpers/get-worker-url');\nlet url = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"b4BBl\"));\nmodule.exports = workerURL(url.toString(), url.origin, true);","\"use strict\";\n\nmodule.exports = function (workerUrl, origin, isESM) {\n  if (origin === self.location.origin) {\n    // If the worker bundle's url is on the same origin as the document,\n    // use the worker bundle's own url.\n    return workerUrl;\n  } else {\n    // Otherwise, create a blob URL which loads the worker bundle with `importScripts`.\n    var source = isESM ? 'import ' + JSON.stringify(workerUrl) + ';' : 'importScripts(' + JSON.stringify(workerUrl) + ');';\n    return URL.createObjectURL(new Blob([source], {\n      type: 'application/javascript'\n    }));\n  }\n};"],"names":["$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$62b3d05905f83386$export$426cc6213ad628cf","this","running","worker","Worker","onerror","e","message","generate","geometry","options","Promise","resolve","reject","onmessage","data","error","serialized","position","bvh","$ff8ed","MeshBVH","deserialize","setIndex","boundsOptions","assign","setBoundingBox","attributes","array","index","newIndex","$ilwiq","BufferAttribute","boundingBox","getBoundingBox","Box3","onProgress","progress","isInterleavedBufferAttribute","transferable","push","postMessage","includedProgressCallback","Boolean","groups","map","arr","buffer","filter","v","SharedArrayBuffer","dispose","terminate","console","warn","$2a05d84d7ffaaa62$var$url","URL","import","meta","url","module","exports","$7ryUf","toString","origin","workerUrl","isESM","self","location","source","stringify","createObjectURL","Blob","type"],"version":3,"file":"asyncGenerate.6b6e94f2.js.map"}