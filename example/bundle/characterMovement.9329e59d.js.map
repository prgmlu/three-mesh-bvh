{"mappings":"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","sources":["node_modules/three/examples/jsm/controls/OrbitControls.js"],"sourcesContent":["import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3\n} from 'three';\n\n// OrbitControls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\n\nclass OrbitControls extends EventDispatcher {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper();\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t//\n\t\t// public methods\n\t\t//\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn spherical.phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn spherical.theta;\n\n\t\t};\n\n\t\tthis.getDistance = function () {\n\n\t\t\treturn this.object.position.distanceTo( this.target );\n\n\t\t};\n\n\t\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = domElement;\n\n\t\t};\n\n\t\tthis.stopListenToKeyEvents = function () {\n\n\t\t\tthis._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = null;\n\n\t\t};\n\n\t\tthis.saveState = function () {\n\n\t\t\tscope.target0.copy( scope.target );\n\t\t\tscope.position0.copy( scope.object.position );\n\t\t\tscope.zoom0 = scope.object.zoom;\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\tscope.update();\n\n\t\t\tstate = STATE.NONE;\n\n\t\t};\n\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\n\t\tthis.update = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tconst quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\t\tconst quatInverse = quat.clone().invert();\n\n\t\t\tconst lastPosition = new Vector3();\n\t\t\tconst lastQuaternion = new Quaternion();\n\n\t\t\tconst twoPI = 2 * Math.PI;\n\n\t\t\treturn function update() {\n\n\t\t\t\tconst position = scope.object.position;\n\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t}\n\n\t\t\t\t// restrict theta to be between desired limits\n\n\t\t\t\tlet min = scope.minAzimuthAngle;\n\t\t\t\tlet max = scope.maxAzimuthAngle;\n\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\t\tspherical.makeSafe();\n\n\n\t\t\t\tspherical.radius *= scale;\n\n\t\t\t\t// restrict radius to be between desired limits\n\t\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t\t// move target to panned location\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\t}\n\n\t\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tzoomChanged = false;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function () {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\tscope.domElement.removeEventListener( 'pointercancel', onPointerUp );\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\t\t\t\tscope._domElementKeyEvents = null;\n\n\t\t\t}\n\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t};\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tconst scope = this;\n\n\t\tconst STATE = {\n\t\t\tNONE: - 1,\n\t\t\tROTATE: 0,\n\t\t\tDOLLY: 1,\n\t\t\tPAN: 2,\n\t\t\tTOUCH_ROTATE: 3,\n\t\t\tTOUCH_PAN: 4,\n\t\t\tTOUCH_DOLLY_PAN: 5,\n\t\t\tTOUCH_DOLLY_ROTATE: 6\n\t\t};\n\n\t\tlet state = STATE.NONE;\n\n\t\tconst EPS = 0.000001;\n\n\t\t// current position in spherical coordinates\n\t\tconst spherical = new Spherical();\n\t\tconst sphericalDelta = new Spherical();\n\n\t\tlet scale = 1;\n\t\tconst panOffset = new Vector3();\n\t\tlet zoomChanged = false;\n\n\t\tconst rotateStart = new Vector2();\n\t\tconst rotateEnd = new Vector2();\n\t\tconst rotateDelta = new Vector2();\n\n\t\tconst panStart = new Vector2();\n\t\tconst panEnd = new Vector2();\n\t\tconst panDelta = new Vector2();\n\n\t\tconst dollyStart = new Vector2();\n\t\tconst dollyEnd = new Vector2();\n\t\tconst dollyDelta = new Vector2();\n\n\t\tconst pointers = [];\n\t\tconst pointerPositions = {};\n\n\t\tfunction getAutoRotationAngle() {\n\n\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction rotateLeft( angle ) {\n\n\t\t\tsphericalDelta.theta -= angle;\n\n\t\t}\n\n\t\tfunction rotateUp( angle ) {\n\n\t\t\tsphericalDelta.phi -= angle;\n\n\t\t}\n\n\t\tconst panLeft = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tconst panUp = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t\t}\n\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// deltaX and deltaY are in pixels; right and down are positive\n\t\tconst pan = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\t\tconst element = scope.domElement;\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t// perspective\n\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\tlet targetDistance = offset.length();\n\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t// orthographic\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}();\n\n\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\t\t// event callbacks - update the object state\n\t\t//\n\n\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseWheel( event ) {\n\n\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleKeyDown( event ) {\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tswitch ( event.code ) {\n\n\t\t\t\tcase scope.keys.UP:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateUp( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateUp( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateLeft( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateLeft( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction handleTouchStartRotate() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\trotateStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\trotateStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartPan() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\tpanStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartDolly() {\n\n\t\t\tconst dx = pointers[ 0 ].pageX - pointers[ 1 ].pageX;\n\t\t\tconst dy = pointers[ 0 ].pageY - pointers[ 1 ].pageY;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyPan() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enablePan ) handleTouchStartPan();\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyRotate() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate();\n\n\t\t}\n\n\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\tif ( pointers.length == 1 ) {\n\n\t\t\t\trotateEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\trotateEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\tpanEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\tconst dx = event.pageX - position.x;\n\t\t\tconst dy = event.pageY - position.y;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyOut( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t\t}\n\n\t\t//\n\t\t// event handlers - FSM: listen for events and reset state\n\t\t//\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.setPointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.addEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\taddPointer( event );\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchStart( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseDown( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchMove( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseMove( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerUp( event ) {\n\n\t\t\tremovePointer( event );\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.releasePointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tlet mouseAction;\n\n\t\t\tswitch ( event.button ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tmouseAction = - 1;\n\n\t\t\t}\n\n\t\t\tswitch ( mouseAction ) {\n\n\t\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.PAN:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\thandleMouseWheel( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\t\thandleKeyDown( event );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( pointers.length ) {\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onContextMenu( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\tfunction addPointer( event ) {\n\n\t\t\tpointers.push( event );\n\n\t\t}\n\n\t\tfunction removePointer( event ) {\n\n\t\t\tdelete pointerPositions[ event.pointerId ];\n\n\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\n\n\t\t\t\tif ( pointers[ i ].pointerId == event.pointerId ) {\n\n\t\t\t\t\tpointers.splice( i, 1 );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction trackPointer( event ) {\n\n\t\t\tlet position = pointerPositions[ event.pointerId ];\n\n\t\t\tif ( position === undefined ) {\n\n\t\t\t\tposition = new Vector2();\n\t\t\t\tpointerPositions[ event.pointerId ] = position;\n\n\t\t\t}\n\n\t\t\tposition.set( event.pageX, event.pageY );\n\n\t\t}\n\n\t\tfunction getSecondPointerPosition( event ) {\n\n\t\t\tconst pointer = ( event.pointerId === pointers[ 0 ].pointerId ) ? pointers[ 1 ] : pointers[ 0 ];\n\n\t\t\treturn pointerPositions[ pointer.pointerId ];\n\n\t\t}\n\n\t\t//\n\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.addEventListener( 'pointercancel', onPointerUp );\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\n\n\t\t// force an update at start\n\n\t\tthis.update();\n\n\t}\n\n}\n\nexport { OrbitControls };\n"],"names":["$443c013b983d0324$var$_changeEvent","type","$443c013b983d0324$var$_startEvent","$443c013b983d0324$var$_endEvent","$443c013b983d0324$export$8ff7788029dfdf52","$ilwiq","EventDispatcher","object","domElement","super","this","style","touchAction","enabled","target","Vector3","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MOUSE","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TOUCH","TWO","DOLLY_PAN","target0","clone","position0","position","zoom0","zoom","_domElementKeyEvents","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","getDistance","distanceTo","listenToKeyEvents","addEventListener","onKeyDown","stopListenToKeyEvents","removeEventListener","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","update","state","STATE","NONE","offset","quat","Quaternion","setFromUnitVectors","up","quatInverse","invert","lastPosition","lastQuaternion","twoPI","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","min","max","isFinite","makeSafe","radius","scale","addScaledVector","panOffset","add","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","onContextMenu","onPointerDown","onPointerUp","onMouseWheel","onPointerMove","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","Spherical","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","length","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","console","warn","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","event","clientX","clientY","handleMouseDownPan","handleTouchStartRotate","pageX","pageY","x","y","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchMoveRotate","getSecondPointerPosition","subVectors","handleTouchMovePan","handleTouchMoveDolly","setPointerCapture","pointerId","push","addPointer","pointerType","trackPointer","DOLLY_ROTATE","onTouchStart","mouseAction","button","handleMouseDownDolly","ctrlKey","metaKey","shiftKey","onMouseDown","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","onTouchMove","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","onMouseMove","i","splice","removePointer","releasePointerCapture","preventDefault","handleMouseWheel","needsUpdate","code","handleKeyDown","undefined","pointer","passive"],"version":3,"file":"characterMovement.9329e59d.js.map"}