{"mappings":"ipBAyCA,MAAMA,EAAU,IAAIC,EAAAC,oBAAoB,EAAK,EAAG,GAAG,EAAK,EAAG,GAIrDC,EAAY,IAAIF,EAAAG,eACtBD,EAAUE,aAAc,WAAY,IAAIJ,EAAAK,uBAAwB,EAAE,EAAK,EAAG,GAAG,GAAK,EAAK,EAAG,GAAG,EAAK,GAAK,IACvGH,EAAUE,aAAc,KAAM,IAAIJ,EAAAK,uBAAwB,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,I,MAE1EC,E,YAEQC,GAEZC,KAAKC,MAAQ,IAAIT,EAAAU,KAAMR,EAAWK,EAEnC,CAEAI,UAECH,KAAKC,MAAMG,SAASD,SAErB,CAEAE,OAAQC,GAEPA,EAASD,OAAQL,KAAKC,MAAOV,EAE9B,CAEIQ,eAEH,OAAOC,KAAKC,MAAMF,QAEnB,CAEIA,aAAUQ,GAEbP,KAAKC,MAAMF,SAAWQ,CAEvB,E","sources":["node_modules/three/examples/jsm/postprocessing/Pass.js"],"sourcesContent":["import {\n\tBufferGeometry,\n\tFloat32BufferAttribute,\n\tOrthographicCamera,\n\tMesh\n} from 'three';\n\nclass Pass {\n\n\tconstructor() {\n\n\t\tthis.isPass = true;\n\n\t\t// if set to true, the pass is processed by the composer\n\t\tthis.enabled = true;\n\n\t\t// if set to true, the pass indicates to swap read and write buffer after rendering\n\t\tthis.needsSwap = true;\n\n\t\t// if set to true, the pass clears its buffer before rendering\n\t\tthis.clear = false;\n\n\t\t// if set to true, the result of the pass is rendered to screen. This is set automatically by EffectComposer.\n\t\tthis.renderToScreen = false;\n\n\t}\n\n\tsetSize( /* width, height */ ) {}\n\n\trender( /* renderer, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\n\n\t\tconsole.error( 'THREE.Pass: .render() must be implemented in derived pass.' );\n\n\t}\n\n\tdispose() {}\n\n}\n\n// Helper for passes that need to fill the viewport with a single quad.\n\nconst _camera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\n// https://github.com/mrdoob/three.js/pull/21358\n\nconst _geometry = new BufferGeometry();\n_geometry.setAttribute( 'position', new Float32BufferAttribute( [ - 1, 3, 0, - 1, - 1, 0, 3, - 1, 0 ], 3 ) );\n_geometry.setAttribute( 'uv', new Float32BufferAttribute( [ 0, 2, 0, 0, 2, 0 ], 2 ) );\n\nclass FullScreenQuad {\n\n\tconstructor( material ) {\n\n\t\tthis._mesh = new Mesh( _geometry, material );\n\n\t}\n\n\tdispose() {\n\n\t\tthis._mesh.geometry.dispose();\n\n\t}\n\n\trender( renderer ) {\n\n\t\trenderer.render( this._mesh, _camera );\n\n\t}\n\n\tget material() {\n\n\t\treturn this._mesh.material;\n\n\t}\n\n\tset material( value ) {\n\n\t\tthis._mesh.material = value;\n\n\t}\n\n}\n\nexport { Pass, FullScreenQuad };\n"],"names":["$0a1d3a5a6a49de03$var$_camera","$ilwiq","OrthographicCamera","$0a1d3a5a6a49de03$var$_geometry","BufferGeometry","setAttribute","Float32BufferAttribute","$0a1d3a5a6a49de03$export$3983474c8e6e978b","material","this","_mesh","Mesh","dispose","geometry","render","renderer","value"],"version":3,"file":"cpuPathTracing.c866b4cf.js.map"}